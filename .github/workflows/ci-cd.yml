name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test:
    name: Build & Test Spring Boot
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: Build and Test with Maven
        run: mvn clean install -DskipTests=false

      - name: Run Unit Tests
        run: mvn test

  analyze-code:
    name: Static Code Analysis
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: "https://sonarcloud.io"

  docker-build-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker Image
        run: docker build -t your-dockerhub-username/qlct-my-project:latest .

      - name: Push Docker Image
        run: docker push your-dockerhub-username/qlct-my-project:latest

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: docker-build-push
    steps:
      - name: SSH Deploy
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            docker pull your-dockerhub-username/qlct-my-project:latest
            docker stop qlct-my-project || true
            docker rm qlct-my-project || true
            docker run -d --name qlct-my-project -p 8080:8080 your-dockerhub-username/qlct-my-project:latest
